--
--  Test mpz datatype
--
--
-- first, define the datatype.  Turn off echoing so that expected file
-- does not depend on contents of pgmp.sql.
--
SET client_min_messages = warning;
\set ECHO none
RESET client_min_messages;
--
-- mpz input and output functions
--
SELECT '0'::mpz;
0
SELECT '1'::mpz;
1
SELECT '-1'::mpz;
-1
SELECT '10'::mpz;
10
SELECT '-10'::mpz;
-10
SELECT ' 1'::mpz;
1
SELECT ' 1.1'::mpz;
ERROR:  invalid input for mpz: " 1.1"
LINE 1: SELECT ' 1.1'::mpz;
               ^
SELECT ' .1'::mpz;
ERROR:  invalid input for mpz: " .1"
LINE 1: SELECT ' .1'::mpz;
               ^
SELECT ' .'::mpz;
ERROR:  invalid input for mpz: " ."
LINE 1: SELECT ' .'::mpz;
               ^
SELECT ' '::mpz;
ERROR:  invalid input for mpz: " "
LINE 1: SELECT ' '::mpz;
               ^
select mpz(' 10',8);
8
select mpz(' 10.2',8);
ERROR:  invalid input for mpz base 8: " 10.2"
select mpz(' .',8);
ERROR:  invalid input for mpz base 8: " ."
select mpz(' .2',8);
ERROR:  invalid input for mpz base 8: " .2"
SELECT '000001'::mpz;       -- padding zeros
1
SELECT '-000001'::mpz;
-1
SELECT '4294967295'::mpz;   -- limbs boundaries
4294967295
SELECT '4294967296'::mpz;
4294967296
SELECT '-4294967296'::mpz;
-4294967296
SELECT '-4294967297'::mpz;
-4294967297
SELECT '18446744073709551614'::mpz;
18446744073709551614
SELECT '18446744073709551615'::mpz;
18446744073709551615
SELECT '18446744073709551616'::mpz;
18446744073709551616
SELECT '18446744073709551617'::mpz;
18446744073709551617
SELECT '-18446744073709551615'::mpz;
-18446744073709551615
SELECT '-18446744073709551616'::mpz;
-18446744073709551616
SELECT '-18446744073709551617'::mpz;
-18446744073709551617
SELECT '-18446744073709551618'::mpz;
-18446744073709551618
SELECT '12345678901234567890123456789012345678901234567890123456789012345678901234567890'::mpz;
12345678901234567890123456789012345678901234567890123456789012345678901234567890
-- other bases
SELECT '0x10'::mpz, '010'::mpz, '0b10'::mpz;
16|8|2
SELECT mpz('10'), mpz('10', 16), mpz('10', 2), mpz('10', 62);
10|16|2|62
SELECT mpz('10', 1);
ERROR:  invalid base for mpz input: 1
HINT:  base should be between 2 and 62
SELECT mpz('10', 63);
ERROR:  invalid base for mpz input: 63
HINT:  base should be between 2 and 62
SELECT text(10::mpz);
10
SELECT text(255::mpz, 16);
ff
SELECT text((36 * 36 - 1)::mpz, 36);
zz
SELECT text((62 * 62 - 1)::mpz, 62);
zz
SELECT text((36 * 36 - 1)::mpz, -36);
ZZ
SELECT text(10::mpz, -37);
ERROR:  invalid base for mpz output: -37
HINT:  base should be between -36 and 62 and cant'be -1 or 1
SELECT text(10::mpz, 63);
ERROR:  invalid base for mpz output: 63
HINT:  base should be between -36 and 62 and cant'be -1 or 1
-- limited error
SELECT ('xx' || repeat('1234567890', 10))::mpz;
ERROR:  invalid input for mpz: "xx123456789012345678901234567890123456789012345678..."
SELECT mpz('xx' || repeat('1234567890', 10), 42);
ERROR:  invalid input for mpz base 42: "xx123456789012345678901234567890123456789012345678..."
--
-- mpz cast
--
SELECT 0::smallint::mpz, (-32768)::smallint::mpz, 32767::smallint::mpz;
0|-32768|32767
SELECT 0::integer::mpz, (-2147483648)::integer::mpz, 2147483647::integer::mpz;
0|-2147483648|2147483647
SELECT 0::bigint::mpz, (-9223372036854775808)::bigint::mpz, 9223372036854775807::bigint::mpz;
0|-9223372036854775808|9223372036854775807
SELECT 0::numeric::mpz, (-12345678901234567890)::numeric::mpz, 12345678901234567890::numeric::mpz;
0|-12345678901234567890|12345678901234567890
-- decimal are truncated
SELECT 123.10::numeric::mpz, 123.90::numeric::mpz;
123|123
SELECT (-123.10::numeric)::mpz, (-123.90::numeric)::mpz;
-123|-123
SELECT 'NaN'::numeric::mpz;
ERROR:  can't convert numeric value to mpz: "NaN"
SELECT 0::mpz, 1::mpz, (-1)::mpz;       -- automatic casts
0|1|-1
SELECT 1000000::mpz, (-1000000)::mpz;
1000000|-1000000
SELECT 1000000000::mpz, (-1000000000)::mpz;
1000000000|-1000000000
SELECT 1000000000000000::mpz, (-1000000000000000)::mpz;
1000000000000000|-1000000000000000
SELECT 1000000000000000000000000000000::mpz, (-1000000000000000000000000000000)::mpz;
1000000000000000000000000000000|-1000000000000000000000000000000
SELECT -1::mpz;       -- these take the unary minus to work
-1
SELECT -1000000::mpz;
-1000000
SELECT -1000000000::mpz;
-1000000000
SELECT -1000000000000000::mpz;
-1000000000000000
SELECT -1000000000000000000000000000000::mpz;
-1000000000000000000000000000000
SELECT 2147483647::mpz::integer;
2147483647
SELECT -2147483647::mpz::integer;
-2147483647
SELECT 2147483648::mpz::integer;
ERROR:  numeric value too big to be converted in integer data type
SELECT -2147483648::mpz::integer;
ERROR:  numeric value too big to be converted in integer data type
SELECT 32767::mpz::smallint;
32767
SELECT -32767::mpz::smallint;
-32767
SELECT 32768::mpz::smallint;
ERROR:  numeric value too big to be converted in smallint data type
SELECT -32768::mpz::smallint;
ERROR:  numeric value too big to be converted in smallint data type
SELECT 9223372036854775807::mpz::bigint;
9223372036854775807
SELECT -9223372036854775807::mpz::bigint;
-9223372036854775807
SELECT 9223372036854775808::mpz::bigint;
ERROR:  numeric value too big to be converted in biginteger data type
SELECT -9223372036854775808::mpz::bigint;
ERROR:  numeric value too big to be converted in biginteger data type
SELECT 2147483648::mpz::bigint;
2147483648
SELECT -2147483648::mpz::bigint;
-2147483648
SELECT (65536::mpz)::bigint;
65536
SELECT (65536::mpz*65536::mpz)::bigint;
4294967296
SELECT (65536::mpz*65536::mpz*65536::mpz)::bigint;
281474976710656
SELECT (65536::mpz*65536::mpz*65536::mpz*65536::mpz/2::mpz-1::mpz)::bigint;
9223372036854775807
SELECT (65536::mpz*65536::mpz*65536::mpz*65536::mpz/2::mpz)::bigint;
ERROR:  numeric value too big to be converted in biginteger data type
SELECT (-65536::mpz)::bigint;
-65536
SELECT (-65536::mpz*65536::mpz)::bigint;
-4294967296
SELECT (-65536::mpz*65536::mpz*65536::mpz)::bigint;
-281474976710656
SELECT (-65536::mpz*65536::mpz*65536::mpz*65536::mpz/2::mpz+1::mpz)::bigint;
-9223372036854775807
SELECT (-65536::mpz*65536::mpz*65536::mpz*65536::mpz/2::mpz)::bigint;
ERROR:  numeric value too big to be converted in biginteger data type
SELECT (65536::mpz)::numeric;
65536
SELECT (65536::mpz*65536::mpz)::numeric;
4294967296
SELECT (65536::mpz*65536::mpz*65536::mpz)::numeric;
281474976710656
SELECT (65536::mpz*65536::mpz*65536::mpz*65536::mpz)::numeric;
18446744073709551616
SELECT (65536::mpz*65536::mpz*65536::mpz*65536::mpz-1::mpz)::numeric;
18446744073709551615
SELECT (-65536::mpz)::numeric;
-65536
SELECT (-65536::mpz*65536::mpz)::numeric;
-4294967296
SELECT (-65536::mpz*65536::mpz*65536::mpz)::numeric;
-281474976710656
SELECT (-65536::mpz*65536::mpz*65536::mpz*65536::mpz)::numeric;
-18446744073709551616
SELECT (-65536::mpz*65536::mpz*65536::mpz*65536::mpz+1::mpz)::numeric;
-18446744073709551615
-- TODO: error on 32 bit, works on 64 bit.
-- SELECT (-65536::mpz*65536::mpz*65536::mpz*65536::mpz/2::mpz)::bigint;
SELECT (65536::mpz)::numeric;
65536
SELECT (65536::mpz*65536::mpz)::numeric;
4294967296
SELECT (65536::mpz*65536::mpz*65536::mpz)::numeric;
281474976710656
SELECT (65536::mpz*65536::mpz*65536::mpz*65536::mpz)::numeric;
18446744073709551616
SELECT (65536::mpz*65536::mpz*65536::mpz*65536::mpz-1::mpz)::numeric;
18446744073709551615
SELECT (-65536::mpz)::numeric;
-65536
SELECT (-65536::mpz*65536::mpz)::numeric;
-4294967296
SELECT (-65536::mpz*65536::mpz*65536::mpz)::numeric;
-281474976710656
SELECT (-65536::mpz*65536::mpz*65536::mpz*65536::mpz)::numeric;
-18446744073709551616
SELECT (-65536::mpz*65536::mpz*65536::mpz*65536::mpz+1::mpz)::numeric;
-18446744073709551615
--
-- mpz arithmetic
--
SELECT -('0'::mpz), +('0'::mpz), -('1'::mpz), +('1'::mpz);
0|0|-1|1
SELECT -('12345678901234567890'::mpz), +('12345678901234567890'::mpz);
-12345678901234567890|12345678901234567890
SELECT abs('-1234567890'::mpz), abs('1234567890'::mpz);
1234567890|1234567890
SELECT '1'::mpz + '2'::mpz;
3
SELECT '2'::mpz + '-4'::mpz;
-2
SELECT regexp_matches((
        ('1' || repeat('0', 1000))::mpz +
        ('2' || repeat('0', 1000))::mpz)::text,
    '^3(0000000000){100}$') IS NOT NULL;
t
SELECT '3'::mpz - '2'::mpz;
1
SELECT '3'::mpz - '5'::mpz;
-2
SELECT regexp_matches((
        ('5' || repeat('0', 1000))::mpz -
        ('2' || repeat('0', 1000))::mpz)::text,
    '^3(0000000000){100}$') IS NOT NULL;
t
SELECT '3'::mpz * '2'::mpz;
6
SELECT '3'::mpz * '-5'::mpz;
-15
SELECT regexp_matches((
        ('2' || repeat('0', 1000))::mpz *
        ('3' || repeat('0', 1000))::mpz)::text,
    '^6(00000000000000000000){100}$') IS NOT NULL;
t
-- PostgreSQL should apply the conventional precedence to operators
-- with the same name of the builtin operators.
SELECT '2'::mpz + '6'::mpz * '7'::mpz;  -- cit.
44
SELECT  '7'::mpz /  '3'::mpz;
2
SELECT '-7'::mpz /  '3'::mpz;
-2
SELECT  '7'::mpz / '-3'::mpz;
-2
SELECT '-7'::mpz / '-3'::mpz;
2
SELECT  '7'::mpz %  '3'::mpz;
1
SELECT '-7'::mpz %  '3'::mpz;
-1
SELECT  '7'::mpz % '-3'::mpz;
1
SELECT '-7'::mpz % '-3'::mpz;
-1
SELECT  '7'::mpz +/  '3'::mpz;
3
SELECT '-7'::mpz +/  '3'::mpz;
-2
SELECT  '7'::mpz +/ '-3'::mpz;
-2
SELECT '-7'::mpz +/ '-3'::mpz;
3
SELECT  '7'::mpz +%  '3'::mpz;
-2
SELECT '-7'::mpz +%  '3'::mpz;
-1
SELECT  '7'::mpz +% '-3'::mpz;
1
SELECT '-7'::mpz +% '-3'::mpz;
2
SELECT  '7'::mpz -/  '3'::mpz;
2
SELECT '-7'::mpz -/  '3'::mpz;
-3
SELECT  '7'::mpz -/ '-3'::mpz;
-3
SELECT '-7'::mpz -/ '-3'::mpz;
2
SELECT  '7'::mpz -%  '3'::mpz;
1
SELECT '-7'::mpz -%  '3'::mpz;
2
SELECT  '7'::mpz -% '-3'::mpz;
-2
SELECT '-7'::mpz -% '-3'::mpz;
-1
SELECT  '7'::mpz /  '0'::mpz;
ERROR:  division by zero
SELECT  '7'::mpz %  '0'::mpz;
ERROR:  division by zero
SELECT  '7'::mpz +/  '0'::mpz;
ERROR:  division by zero
SELECT  '7'::mpz +%  '0'::mpz;
ERROR:  division by zero
SELECT  '7'::mpz -/  '0'::mpz;
ERROR:  division by zero
SELECT  '7'::mpz -%  '0'::mpz;
ERROR:  division by zero
SELECT  '21'::mpz /! '7'::mpz;
3
SELECT  '10000000000'::mpz << 10;
10240000000000
SELECT  '10000000000'::mpz << 0;
10000000000
SELECT  '10000000000'::mpz << -1;
ERROR:  op2 can't be negative
SELECT  '1027'::mpz >>   3;
128
SELECT '-1027'::mpz >>   3;
-128
SELECT  '1027'::mpz >>  -3;
ERROR:  op2 can't be negative
SELECT  '1027'::mpz %>   3;
3
SELECT '-1027'::mpz %>   3;
-3
SELECT  '1027'::mpz %>  -3;
ERROR:  op2 can't be negative
SELECT  '1027'::mpz +>>   3;
129
SELECT '-1027'::mpz +>>   3;
-128
SELECT  '1027'::mpz +>>  -3;
ERROR:  op2 can't be negative
SELECT  '1027'::mpz +%>   3;
-5
SELECT '-1027'::mpz +%>   3;
-3
SELECT  '1027'::mpz +%>  -3;
ERROR:  op2 can't be negative
SELECT  '1027'::mpz ->>   3;
128
SELECT '-1027'::mpz ->>   3;
-129
SELECT  '1027'::mpz ->>  -3;
ERROR:  op2 can't be negative
SELECT  '1027'::mpz -%>   3;
3
SELECT '-1027'::mpz -%>   3;
5
SELECT  '1027'::mpz -%>  -3;
ERROR:  op2 can't be negative
-- power operator/functions
SELECT 2::mpz ^ 10;
1024
SELECT 2::mpz ^ 0;
1
SELECT 2::mpz ^ -1;
ERROR:  op2 can't be negative
SELECT pow(2::mpz, 10);
1024
SELECT pow(2::mpz, 0);
1
SELECT pow(2::mpz, -1);
ERROR:  op2 can't be negative
--
-- mpz ordering operators
--
select 1000::mpz =   999::mpz;
f
select 1000::mpz =  1000::mpz;
t
select 1000::mpz =  1001::mpz;
f
select 1000::mpz <>  999::mpz;
t
select 1000::mpz <> 1000::mpz;
f
select 1000::mpz <> 1001::mpz;
t
select 1000::mpz !=  999::mpz;
t
select 1000::mpz != 1000::mpz;
f
select 1000::mpz != 1001::mpz;
t
select 1000::mpz <   999::mpz;
f
select 1000::mpz <  1000::mpz;
f
select 1000::mpz <  1001::mpz;
t
select 1000::mpz <=  999::mpz;
f
select 1000::mpz <= 1000::mpz;
t
select 1000::mpz <= 1001::mpz;
t
select 1000::mpz >   999::mpz;
t
select 1000::mpz >  1000::mpz;
f
select 1000::mpz >  1001::mpz;
f
select 1000::mpz >=  999::mpz;
t
select 1000::mpz >= 1000::mpz;
t
select 1000::mpz >= 1001::mpz;
f
select mpz_cmp(1000::mpz,  999::mpz);
1
select mpz_cmp(1000::mpz, 1000::mpz);
0
select mpz_cmp(1000::mpz, 1001::mpz);
-1
-- Can create a btree index
create table test_mpz_idx (z mpz);
create index test_mpz_idx_idx on test_mpz_idx (z);
--
-- mpz aggregation
--
CREATE TABLE mpzagg(z mpz);
SELECT sum(z) FROM mpzagg;      -- NULL sum

INSERT INTO mpzagg SELECT generate_series(1, 100);
INSERT INTO mpzagg VALUES (NULL);
SELECT sum(z) FROM mpzagg;
5050
SELECT prod(z) FROM mpzagg;
93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000
--
-- test functions
--
SELECT mpz_test_dataset(5, 20);
88888888888888888888
88888888888888888888
88888888888888888888
88888888888888888888
88888888888888888888
SELECT numeric_test_dataset(5, '123456'::numeric);
123456
123456
123456
123456
123456
--
-- mpz functions tests
--
SELECT mpz_sqrt(25::mpz);
5
SELECT mpz_sqrt(('1' || repeat('0',100))::mpz);
100000000000000000000000000000000000000000000000000
SELECT mpz_root(25::mpz);
5
SELECT mpz_root(('1' || repeat('0',100))::mpz);
100000000000000000000000000000000000000000000000000
SELECT mpz_root(27::mpz,3);
3
SELECT mpz_root(('1' || repeat('0',100))::mpz,3);
2154434690031883721759293566519350
SELECT mpz_nextprime(5::mpz);
7
SELECT mpz_nextprime(10::mpz);
11
SELECT mpz_nextprime(100::mpz);
101
SELECT mpz_nextprime(1000::mpz);
1009
